security:
    # https://symfony.com/doc/current/security/experimental_authenticators.html
    enable_authenticator_manager: true
    # https://symfony.com/doc/current/security.html#c-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
        App\Entity\User:
            algorithm: auto

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: login
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            provider: app_user_provider
            custom_authenticator: App\Security\AdminAuthAuthenticator
            logout:
                path: app_logout
                # where to redirect after logout
                # target: app_any_route
            remember_me:
                secret:   '%kernel.secret%'
                lifetime: 604800 # 1 week in seconds
                path:     ^/
            pattern: ^/   
            user_checker: App\Security\BanChecker
            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication
            login_throttling:
                limiter: app.login_rate_limiter
            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/, roles: ROLE_MODERATOR, port: 5555 }
        - { path: ^/(pl|en|ru)/bcp, roles: ROLE_MODERATOR, port: 5555 }
        - { path: ^/(pl|en|ru)/bcp, roles: ROLE_NO_ACCESS }
        - { path: ^/user, roles: ROLE_USER, port: 80 }
        - { path: ^/user, roles: ROLE_USER, port: 443 }
        - { path: ^/(pl|en|ru)/login, port: 5555 }
        - { path: ^/, port: 80 }
        - { path: ^/, port: 443 }
        - { path: ^/, roles: ROLE_NO_ACCESS }
        
    role_hierarchy:
        ROLE_MODERATOR: ROLE_USER
        ROLE_ADMIN: ROLE_MODERATOR
        ROLE_SUPER_ADMIN: ROLE_ADMIN